

1. Сохранение заметок в файл

Файл: Этап4_Сохранение_Заметок_Пиминов_Тихон.py

Описание задачи:
Создать функцию save_notes_to_file(notes, filename), которая:
Перезаписывает данные файла, записывая список заметок в текстовом формате JSON.

# Формируем строку для каждой заметки в нужном формате
            formatted_note = (
                f"Имя пользователя: {note.get('username', '')}\n"
                f"Заголовок: {note.get('title', '')}\n"
                f"Описание: {note.get('content', '')}\n"
                f"Статус: {note.get('status', '')}\n"
                f"Дата создания: {note.get('created_date', '')}\n"
                f"Дедлайн: {note.get('issue_date', '')}\n"
                "---\n"
            )

# Пример заметок для сохранения
notes = [
    {
        "username": "Иван",
        "title": "Сделать покупки",
        "content": "Купить продукты на неделю.",
        "status": "В процессе",
        "created_date": "2023-10-01",
        "issue_date": "2023-10-05"
    }


2. Загрузка заметок из файла

Файл: Этап4_Загрузка_Заметок_Пиминов_Тихон.py

Описание задачи:

Создать функцию load_notes_from_file(filename), которая:
    Читает заметки из текстового файла в формате YAML.
    Преобразует данные в список словарей.

Пример сохранения заметки в текстовый файл ;

Имя пользователя: Иван
Заголовок: Сделать покупки
Описание: Купить продукты на неделю.
Статус: В процессе
Дата создания: 2023-10-01
Дедлайн: 2023-10-05
---
Имя пользователя: Мария
Заголовок: Позвонить бабушке
Описание: Не забыть позвонить сегодня вечером.
Статус: Выполнено
Дата создания: 2023-10-02
Дедлайн: 2023-10-02
---

3. Обработка ошибок при работе с файлами

Файл: Этап4_Обработка_Пиминов_Тихон.py

Описание задачи:
Добавить обработку ошибок в функции работы с файлами:

Пример обработки ошибоок ;

except FileNotFoundError:
print(f"Файл '{filename}' не найден. Создан новый файл.")
# Создаем новый файл
with open(filename, 'w', encoding='utf-8') as new_file:
    pass  # Просто создаем файл, ничего не записывая
return notes  # Возвращаем пустой список
except IOError as e:
print(f"Ошибка при чтении файла '{filename}': {e}")
return notes  # Возвращаем пустой список

if not lines:
    print(f"Файл '{filename}' пуст.")
    return notes  # Возвращаем пустой список

Пример вывода ;

Заметки успешно сохранены в файл 'notes.txt'.
Заметки успешно загружены из файла 'notes.txt'.
Загруженные заметки:
[{'username': 'Иван', 'title': 'Сделать покупки', 'content': 'Купить продукты на неделю.',
  'status': 'В процессе', 'created_date': '2023-10-01', 'issue_date': '2023-10-05'},
 {'username': 'Мария', 'title': 'Позвонить бабушке', 'content': 'Не забыть позвонить сегодня вечером.',
  'status': 'Выполнено', 'created_date': '2023-10-02', 'issue_date': '2023-10-02'}]

4. Добавление данных в файл

Файл: Этап4_Добавление_Данных_Пиминов_Тихон.py

Описание задачи:
    Создать функцию append_notes_to_file(notes, filename), которая:
        Добавляет новые заметки в существующий файл, сохраняя старые данные.
        Формат записи аналогичен save_notes_to_file, но файл открывается в режиме добавления.

Пример;

Загруженные заметки после первого сохранения:
[{'username': 'Иван', 'title': 'Сделать покупки', 'content': 'Купить продукты на неделю.',
  'status': 'В процессе', 'created_date': '2023-10-01', 'issue_date': '2023-10-05'},
 {'username': 'Мария', 'title': 'Позвонить бабушке', 'content': 'Не забыть позвонить сегодня вечером.',
  'status': 'Выполнено', 'created_date': '2023-10-02', 'issue_date': '2023-10-02'}]

Новые заметки успешно добавлены в файл 'notes.txt'.

Заметки успешно загружены из файла 'notes.txt'.

Загруженные заметки после добавления новых заметок:

[{'username': 'Иван', 'title': 'Сделать покупки', 'content': 'Купить продукты на неделю.',
  'status': 'В процессе', 'created_date': '2023-10-01', 'issue_date': '2023-10-05'},
 {'username': 'Мария', 'title': 'Позвонить бабушке', 'content': 'Не забыть позвонить сегодня вечером.',
  'status': 'Выполнено', 'created_date': '2023-10-02', 'issue_date': '2023-10-02'},
 {'username': 'Алексей', 'title': 'Прочитать книгу', 'content': 'Прочитать новую книгу до конца месяца.',
  'status': 'Новая', 'created_date': '2023-10-03', 'issue_date': '2023-10-31'},
 {'username': 'Екатерина', 'title': 'Подготовиться к экзамену', 'content': 'Повторить все темы по математике.',
  'status': 'В процессе', 'created_date': '2023-10-04', 'issue_date': '2023-10-15'}]

5. Выбор формата файла

Файл: Этап4_JSON_Формат_Пиминов_Тихон.py

Описание задачи:
    Создать функцию save_notes_json(notes, filename), которая:
        Сохраняет список заметок в формате JSON.
        Записывает данные с отступами (indent=4) для удобства чтения.

Пример ;

Загруженные заметки из JSON файла:
[{'username': 'Алексей', 'title': 'Список покупок', 'content': 'Купить продукты', 'status': 'новая',
  'created_date': '27-11-2024', 'issue_date': '30-11-2024'},
 {'username': 'Мария', 'title': 'Позвонить бабушке', 'content': 'Не забыть позвонить сегодня вечером.',
  'status': 'Выполнено', 'created_date': '2023-10-02', 'issue_date': '2023-10-02'}]

Пример хранения в json :

[
    {
        "username": "Алексей",
        "title": "Список покупок",
        "content": "Купить продукты",
        "status": "новая",
        "created_date": "27-11-2024",
        "issue_date": "30-11-2024"
    },
    {
        "username": "Мария",
        "title": "Позвонить бабушке",
        "content": "Не забыть позвонить сегодня вечером.",
        "status": "Выполнено",
        "created_date": "2023-10-02",
        "issue_date": "2023-10-02"
    }


